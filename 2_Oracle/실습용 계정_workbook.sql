-- BASIC SELECT
SELECT *
FROM TB_CLASS;

SELECT *
FROM TB_CLASS_PROFESSOR;

SELECT *
FROM TB_DEPARTMENT;

SELECT *
FROM TB_GRADE;

SELECT *
FROM TB_PROFESSOR;

SELECT *
FROM TB_STUDENT;

-- 문제 시작
-- 1)
SELECT DEPARTMENT_NAME "학과 명", CATEGORY 계열
FROM tb_department;


-- 2)
SELECT DEPARTMENT_NAME||'의 정원은' "학과별 정원" ,CAPACITY||'명 입니다.' " "
FROM TB_DEPARTMENT;

-- 3) DEPARTMENT_NO : 001
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE DEPARTMENT_NO = 001 AND SUBSTR(STUDENT_SSN, 8, 1) = '2' AND ABSENCE_YN = 'Y';

-- 4) 
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE STUDENT_NO IN ('A513079', 'A513090', 'A513091', 'A513110', 'A513119')
ORDER BY STUDENT_NAME DESC;

-- 5)
SELECT DEPARTMENT_NAME, CATEGORY
FROM TB_DEPARTMENT
WHERE CAPACITY BETWEEN 20 AND 30;

-- 6)
SELECT PROFESSOR_NAME 
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO IS NULL;

-- 7)
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE DEPARTMENT_NO IS NULL;

-- 8)
SELECT CLASS_NO
FROM TB_CLASS
WHERE PREATTENDING_CLASS_NO IS NOT NULL;

-- 9)
SELECT DISTINCT CATEGORY
FROM TB_DEPARTMENT
ORDER BY CATEGORY;

SELECT STUDENT_ADDRESS
FROM TB_STUDENT;
-- 10)
SELECT STUDENT_NO, STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE SUBSTR(TO_CHAR(ENTRANCE_DATE), 1, 2) = '02'
AND ABSENCE_YN = 'N'
AND SUBSTR(STUDENT_ADDRESS, 1, 2) = '전주'
ORDER BY STUDENT_NAME ; 

-- Additional SELECT - 함수
--1)
SELECT STUDENT_NO 학번, STUDENT_NAME 이름, TO_CHAR(ENTRANCE_DATE,'YYYY-MM-DD') 입학년도
FROM TB_STUDENT
WHERE DEPARTMENT_NO = 002
ORDER BY ENTRANCE_DATE;
--2)
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE LENGTH(PROFESSOR_NAME) <> 3;

--3)
SELECT PROFESSOR_NAME 교수이름, SYSDATE-TO_DATE(SUBSTR(PROFESSOR_SSN, 1, 6), 'RR/MM/DD')
FROM TB_PROFESSOR
ORDER BY 2;
--EXTRACT(YEAR FROM SUBSTR(PROFESSOR_SSN, 1, 6);

SELECT PROFESSOR_NAME 교수이름, 
FLOOR(MONTHS_BETWEEN(SYSDATE, TO_DATE('19' || 
SUBSTR(PROFESSOR_SSN, 1, 6), 'YYYYMMDD')) / 12 ) 나이
FROM TB_PROFESSOR
WHERE SUBSTR(PROFESSOR_SSN, 8, 1) = '1'
ORDER BY 2;

SELECT PROFESSOR_NAME 교수이름, 
FLOOR(TO_NUMBER(SYSDATE - TO_DATE('19' || 
SUBSTR(PROFESSOR_SSN, 1, 6), 'YYYYMMDD')) / 365)  나이
FROM TB_PROFESSOR
WHERE SUBSTR(PROFESSOR_SSN, 8, 1) = '1'
ORDER BY 2;


SELECT PROFESSOR_NAME 교수이름,
CASE WHEN TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE, 'YYYYMMDD'), 5)) < TO_NUMBER(SUBSTR(PROFESSOR_SSN, 3,4)) 
THEN EXTRACT(YEAR FROM SYSDATE) - (19 || SUBSTR(PROFESSOR_SSN, 1, 2))-1
ELSE EXTRACT(YEAR FROM SYSDATE) - (19 || SUBSTR(PROFESSOR_SSN, 1, 2))
END "나이"
FROM TB_PROFESSOR
WHERE SUBSTR(PROFESSOR_SSN, 8, 1) = '1'
ORDER BY 2;


--4)
SELECT SUBSTR(PROFESSOR_NAME, 2) 이름
FROM TB_PROFESSOR;

--5)
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE EXTRACT(YEAR FROM ENTRANCE_DATE)-EXTRACT(YEAR FROM TO_DATE(SUBSTR(STUDENT_SSN, 1, 6))) >=20
ORDER BY STUDENT_NAME;

--6) 금요일
SELECT TO_CHAR(TO_DATE('20201225') ,'day') 요일
from dual;

--7) 2099년 10월 11일, 2049년 10월 11일
-- 1999년 10월 11일, 2049년 10월 11일

--8)
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE SUBSTR(STUDENT_NO, 1, 1) <> 'A'
ORDER BY STUDENT_NO DESC;

--9)
SELECT ROUND(AVG(POINT),1) 평점
FROM TB_GRADE
WHERE STUDENT_NO = 'A517178';

-- 10)
SELECT DEPARTMENT_NO 학과번호, COUNT(*) "학생수(명)"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO;

-- 11)
SELECT COUNT(*)
FROM TB_STUDENT
WHERE coach_professor_no IS NULL;

-- 12)

SELECT SUBSTR(TO_CHAR(TERM_NO),1, 4) 년도, ROUND(AVG(POINT), 1) "년도 별 평점"
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY SUBSTR(TO_CHAR(TERM_NO),1, 4);

-- 13)

SELECT DEPARTMENT_NO 학과코드명, COUNT(DECODE(ABSENCE_YN, 'Y', ' ')) 휴학생수 
FROM TB_STUDENT 
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO;

-- 14)
SELECT STUDENT_NAME 동일이름 , COUNT(*) "동명인 수"
FROM TB_STUDENT
GROUP BY STUDENT_NAME
HAVING COUNT(*) <> 1
ORDER BY STUDENT_NAME;

-- 15)
SELECT SUBSTR(TERM_NO, 1, 4) 년도, SUBSTR(TERM_NO, 5, 2) 학기, ROUND(AVG(POINT), 1) 평점
FROM TB_GRADE 
WHERE STUDENT_NO = 'A112113'
group by ROLLUP(SUBSTR(TERM_NO, 1, 4), SUBSTR(TERM_NO, 5, 2))
ORDER BY 년도;

SELECT SUBSTR(TERM_NO, 1, 4)
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113';





-- ADDITIONAL SELECT - OPTION
--1)
SELECT STUDENT_NAME "학생 이름", STUDENT_ADDRESS "주소지"
FROM TB_STUDENT
ORDER BY STUDENT_NAME;

--2)
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
ORDER BY STUDENT_SSN DESC;

--3)
SELECT STUDENT_NAME 학생이름, STUDENT_NO 학번, STUDENT_ADDRESS "거주지 주소"
FROM TB_STUDENT
WHERE SUBSTR(TO_CHAR(STUDENT_NO), 1, 1) = '9'
AND SUBSTR(STUDENT_ADDRESS, 1, 3) IN ('경기도', '강원도')
ORDER BY STUDENT_NAME;

--4)
SELECT * FROM TB_DEPARTMENT WHERE DEPARTMENT_NAME = '법학과';

SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO = 005 
ORDER BY PROFESSOR_SSN;

-- 5)
SELECT * FROM TB_GRADE;
SELECT STUDENT_NO, TO_CHAR(POINT, '9.99')
FROM TB_GRADE
WHERE CLASS_NO = 'C3118100'
AND TERM_NO = 200402
ORDER BY POINT DESC, STUDENT_NO ASC;

-- 6)
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
ORDER BY STUDENT_NAME DESC;

-- 7)
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
ORDER BY CLASS_NAME;

--8)
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS
JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_PROFESSOR USING(PROFESSOR_NO);

--9) 다중 조인 쓸 때 순서? 기준? 뭐지? 1,2번째 줄에 TB_DEPARTMENT JOIN할 때는 되는데, 3번째 줄에서는 안됨.
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS C
JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_PROFESSOR USING(PROFESSOR_NO)
JOIN TB_DEPARTMENT D ON(C.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE CATEGORY = '인문사회'; 

--10)
SELECT STUDENT_NO 학번, STUDENT_NAME "학생 이름", ROUND(AVG(POINT), 1) "전체 평점"
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_GRADE USING(STUDENT_NO)
WHERE DEPARTMENT_NAME = '음악학과'
GROUP BY STUDENT_NO, STUDENT_NAME
ORDER BY STUDENT_NO;

--11)
SELECT DEPARTMENT_NAME "학과 이름", STUDENT_NAME "학생 이름", PROFESSOR_NAME "지도 교수 이름"
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_PROFESSOR ON(COACH_PROFESSOR_NO = PROFESSOR_NO)
WHERE STUDENT_NO = 'A313047';

--12)
SELECT * FROM TB_GRADE;


SELECT STUDENT_NAME, TERM_NO TERM_NAME, CLASS_NAME, POINT
FROM TB_STUDENT S
JOIN TB_GRADE USING(STUDENT_NO)
JOIN TB_CLASS USING(CLASS_NO)
JOIN TB_DEPARTMENT D ON (S.DEPARTMENT_NO = D.DEPARTMENT_NO) -- 내가 연관 지으려는 테이블 외에 다른 테이블에도 해당하는 컬럼이 있을 경우 USING 사용하지 않도록 유의!! ON을 써주자!
WHERE CLASS_NAME = '인간관계론'
AND SUBSTR(TO_CHAR(TERM_NO),1,4) = '2007'
ORDER BY CLASS_NAME;

--13)
SELECT CLASS_NAME, PROFESSOR_NO FROM TB_CLASS_PROFESSOR
JOIN TB_CLASS USING(CLASS_NO);
SELECT OPEN_YN FROM TB_DEPARTMENT;
SELECT * FROM TB_PROFESSOR;
-- 계열(CATEGORY), 과목(CLASS_NAME), DEPARTMENT_NAME, 담당교수(PROFESSOR_NO)
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
LEFT JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
WHERE CATEGORY = '예체능'
AND PROFESSOR_NO IS NULL
ORDER BY DEPARTMENT_NAME;

--14)
SELECT STUDENT_NAME 학생이름, NVL(PROFESSOR_NAME, '지도교수 미지정') 지도교수
FROM TB_STUDENT S
LEFT JOIN TB_PROFESSOR ON(COACH_PROFESSOR_NO = PROFESSOR_NO)
JOIN TB_DEPARTMENT D ON(S.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '서반아어학과'
ORDER BY STUDENT_NO;

--15)
SELECT STUDENT_NO 학번, STUDENT_NAME 이름, DEPARTMENT_NAME "학과 이름", ROUND(AVG(POINT),8) "평점"
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_GRADE USING(STUDENT_NO) 
WHERE ABSENCE_YN = 'N'
GROUP BY STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
HAVING ROUND(AVG(POINT),8)>= 4.0
ORDER BY STUDENT_NO;

--16)
SELECT * FROM TB_CLASS;
SELECT CLASS_NO, CLASS_NAME, TRUNC(AVG(POINT),8) "AVG(POINT)"
FROM TB_CLASS
JOIN TB_GRADE USING(CLASS_NO)
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '환경조경학과'
AND CLASS_TYPE LIKE '전공%'
GROUP BY CLASS_NO, CLASS_NAME
ORDER BY CLASS_NO;

--17)
SELECT STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO
                            FROM TB_STUDENT
                            WHERE STUDENT_NAME = '최경희')
ORDER BY STUDENT_NAME DESC;       

--18) 가장 높은 평점? 어케 하냐 ROWNUM 쓰면 되지
SELECT * 
FROM ( SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
JOIN TB_GRADE USING(STUDENT_NO)
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '국어국문학과'
GROUP BY STUDENT_NO, STUDENT_NAME
ORDER BY AVG(POINT) DESC)
WHERE ROWNUM = 1;


--AND AVG(POINT) = (SELECT MAX(AVG(POINT))
            --        FROM TB_GRADE);
            
-- 19)    
SELECT DEPARTMENT_NAME "계열 학과명", ROUND(AVG(POINT),1) "전공평점"
FROM TB_DEPARTMENT 
JOIN TB_CLASS USING(DEPARTMENT_NO)
JOIN TB_GRADE USING(CLASS_NO)
WHERE CATEGORY = (SELECT CATEGORY
                 FROM TB_DEPARTMENT
                 WHERE DEPARTMENT_NAME = '환경조경학과')
AND CLASS_TYPE LIKE('전공%')                 
GROUP BY DEPARTMENT_NAME
ORDER BY DEPARTMENT_NAME;


                            


-- 날짜 표현법 추가 자료
SELECT TO_CHAR(TO_DATE('24/01/29'), 'YYYY-MM-DD') FROM DUAL;

SELECT TO_CHAR(TO_DATE('240105'), 'YYYY"년" FMMM"월" DD"일"') FROM DUAL;
-- > FM : 뒤에 오는 데이터의 0을 모두 제외시켜줌! 즉, 월에다가만 FM을 붙여도 일에서도 0을 제거해줌.

































-- <자체 연습>
SELECT *
FROM TB_CLASS;

SELECT *
FROM TB_CLASS_PROFESSOR;

SELECT *
FROM TB_DEPARTMENT;

SELECT *
FROM TB_GRADE;

SELECT *
FROM TB_PROFESSOR;

SELECT *
FROM TB_STUDENT;

SELECT STUDENT_NO 학번, STUDENT_NAME 학생명, POINT 학점, CLASS_NAME 과목명
FROM TB_STUDENT
JOIN TB_GRADE USING(STUDENT_NO)
JOIN TB_CLASS USING(CLASS_NO)
WHERE POINT > 3.5;
