	|		Servlet			|		JSP		 |
===================================================================
형태	| [ 자바	]코드에 [html	]코드 삽입	| [html	]코드에 [자바	]코드 삽입 |
--------------------------------------------------------------------------------------------------------------------
예시	| out.println("<h1>" + name + "</h1>);	| <h1><%= name %></h1>		 |
--------------------------------------------------------------------------------------------------------------------
특징	| [비즈니스		] 로직 처리에 적합		| 화면처리(프리젠테이션) 로직 처리에 적합  |
===================================================================

* 서블릿은 HttpServlet 클래스의 [   상속   ] 받는 자바 클래스이다.
	get 요청에 대하여는 [  doGet      ] 메소드가 실행되고,
	post 요청에 대하여는 [   doPost      ] 메소드가 실행된다.

	요청 시 전달되는 데이터는 
		해당하는 키의 하나의 데이터를 뽑아올 때는 request.[ getParameter   ] 메소드를 호출하며 반환타입은 [String] 이다.
		해당하는 키의 여러 개의 데이터를 뽑아올 때는 request.[ getParameterValues           ] 메소드를 호출하며 반환타입은 [String[] ] 이다.

* MVC패턴(M: Model, V: View, C: Controller)
사용자의 입력을 받을 수 있는 화면 (View)
요청을 받아 데이터를 뽑아낸 다음 ( Controller ),
	해당 데이터를 [ Service	] 에 전달하고, 
	DB 작업이 필요한 경우 [	DAO	]에 전달하여 진행한다.
	vo(Value Object) => 데이터 (객체), 테이블을 기준으로 작성
	dto => 데이터 통신 시 필요한 데이터로만 객체

* 처리 작업이 완료되면 [	응답페이지	]를 요청한 곳으로 전달한다.
	JSP로 작성한 페이지를 응답할 경우 [	RequestDispatcher	] 객체를 사용하여 포워딩(forward)을 한다.
	url에 화면(view) 파일 경로를 그대로 노출시키지 않고자 할 경우 특정 url로 재요청 하는 방식을 사용하는데,
	[    response(HttpServletResponse)  ] 객체의 [sendRedirect       ] 메소드를 사용하여 응답한다.
	

* JSP 표현법
	[1] 스크립팅 원소 (Scripting Element) : JSP 페이지에서 자바 코드를 작성할 수 있게 해주는 기능
		+ 스크립트릿 : [   <% 자바 코드 %>     ] 가장 기본적인 표현법
		+ 표현식/출력식 : [  <%= 변수/함수호출 %>      ] 화면에 출력할 때 사용
		+ 선언식 : [ <%! 메소드선언문 %>       ] 멤버 변수나 메소드 선언 시 사용

	[2] 지시어 (Directive) : JSP 페이지 전체에 영향을 미치는 정보를 작성할 때 사용
		표현법 : [     <%@ page|include|taglib %>       ]
		+ [page	] : 현재 jsp 페이지를 처리하는데 필요한 각종 속성들을 기술
			- language : 사용할 언어 유형
			- contentType : 해당 페이지의 형식, 문자셋
			- pageEncoding : jsp 페이지 내에 기록된 자바 코드의 인코딩 방식
			- import : 자바의 import와 같은 의미
			- errorPage : jsp 상에 오류 발생 시 보여줄 에러페이지 파일 경로
		+ include : [ 현재 jsp페이지에 다른 jsp 페이지를 포함할 때 사용	]
		+ taglib : jsp 기능을 확장 시킬 수 있는 라이브러리를 추가할 때 사용

* 클라이언트(프론트)에서 요청 시
	form 태그의 아래 속성을 작성하여 요청
		+ action : [ 요청 url주소	]
		+ method : [ 요청 방식	]
	form 태그 내의 입력 요소들의 속성
		+ name : [요청하는 데이터의 "키값"	]
		+ value : [요청하는 데이터의 "밸류값"		]