/*
        *DDL
*/
--1)
CREATE TABLE TB_CATEGORY (
    NAME VARCHAR2(10),
    USE_YN CHAR(1) DEFAULT 'Y'
);

--2)
CREATE TABLE TB_CLASS_TYPE (
    NO VARCHAR2(5) PRIMARY KEY,
    NAME VARCHAR2(10)
);


--3) 
ALTER TABLE TB_CATEGORY
ADD PRIMARY KEY(NAME);

--4)
ALTER TABLE TB_CLASS_TYPE
MODIFY NAME NOT NULL;

--5)
ALTER TABLE TB_CLASS_TYPE
MODIFY NO VARCHAR2(10);

ALTER TABLE TB_CATEGORY
MODIFY NAME VARCHAR2(20);

ALTER TABLE TB_CLASS_TYPE
MODIFY NAME VARCHAR2(20);

--6)
ALTER TABLE TB_CATEGORY
RENAME COLUMN NAME TO CATEGORY_NAME;

ALTER TABLE TB_CLASS_TYPE
RENAME COLUMN NAME TO CLASS_TYPE_NAME;

ALTER TABLE TB_CLASS_TYPE
RENAME COLUMN NO TO CLASS_TYPE_NO;

--7)
ALTER TABLE TB_CATEGORY
RENAME CONSTRAINT SYS_C008538 TO PK_CATEGORY_NAME;

ALTER TABLE TB_CLASS_TYPE
RENAME CONSTRAINT SYS_C008537 TO PK_CLASS_TYPE_NO;

--8)
INSERT INTO TB_CATEGORY VALUES('공학', 'Y');
INSERT INTO TB_CATEGORY VALUES('자연과학', 'Y');
INSERT INTO TB_CATEGORY VALUES('의학', 'Y');
INSERT INTO TB_CATEGORY VALUES('예체능', 'Y');
INSERT INTO TB_CATEGORY VALUES('인문사회', 'Y');
COMMIT;

--9)
ALTER TABLE TB_DEPARTMENT
ADD CONSTRAINT FK_DEPARTMENT_CATEGORY FOREIGN KEY(CATEGORY) REFERENCES TB_CATEGORY(CATEGORY_NAME);


--10)
CREATE VIEW VW_학생일반정보 (학번, 학생이름, 주소)
AS SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
    FROM TB_STUDENT;


--11)
CREATE VIEW VW_지도면담 (학생이름, 학과이름, 지도교수이름)
AS SELECT STUDENT_NAME, DEPARTMENT_NAME, NVL(PROFESSOR_NAME, '지도교수없음')
    FROM TB_STUDENT
    JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
    LEFT JOIN TB_PROFESSOR ON(COACH_PROFESSOR_NO = PROFESSOR_NO)
    ORDER BY DEPARTMENT_NAME;
    
DROP VIEW VW_지도면담;

--12)
CREATE VIEW VW_학과별학생수 (DEPARTMENT_NAME, STUDENT_COUNT)
AS SELECT DEPARTMENT_NAME, COUNT(*)
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
GROUP BY DEPARTMENT_NAME;


SELECT DEPARTMENT_NAME, COUNT(*)
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
GROUP BY CUBE(DEPARTMENT_NAME);

--13)
UPDATE VW_학생일반정보
    SET 학생이름 = '심재윤'
    WHERE 학번 = 'A213046';
    
--14)
CREATE VIEW VW_학생일반정보 (학번, 학생이름, 주소)
AS SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
    FROM TB_STUDENT
    WITH READ ONLY;  -- VIEW에 대해 조회만 가능하도록 함.
    
--15)
SELECT * FROM TB_GRADE ORDER BY TERM_NO;

SELECT *
FROM (SELECT CLASS_NO 과목번호, CLASS_NAME 과목이름, COUNT(*) 누적수강생수
FROM TB_CLASS
JOIN TB_GRADE USING(CLASS_NO)
WHERE SUBSTR(TERM_NO,1,4) IN ( '2009', '2008', '2007', '2006', '2005')
GROUP BY CLASS_NO, CLASS_NAME
ORDER BY COUNT(*) DESC)
WHERE ROWNUM <= 3;

-- SELECT * FROM 

SELECT CLASS_NO, SUBSTR(TERM_NO,1,4), COUNT(*)
FROM TB_GRADE
WHERE CLASS_NO IN ('C1753800', 'C1753400', 'C2454000')
GROUP BY CLASS_NO, SUBSTR(TERM_NO,1,4)
ORDER BY CLASS_NO, 2 DESC;
-- HAVING 












/*
    [DML]
*/

--1) 
INSERT INTO TB_CLASS_TYPE VALUES ( '01', '전공필수');
INSERT INTO TB_CLASS_TYPE VALUES ( '02', '전공선택');
INSERT INTO TB_CLASS_TYPE VALUES ( '03', '교양필수');
INSERT INTO TB_CLASS_TYPE VALUES ( '04', '교양선택');
INSERT INTO TB_CLASS_TYPE VALUES ( '05', '논문지도');

SELECT * FROM TB_CLASS_TYPE;

--2)
CREATE TABLE TB_학생일반정보 ( 학번, 학생이름, 주소)
AS SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT;

SELECT * FROM TB_학생일반정보;
DROP TABLE TB_학생일반정보;

--3)
CREATE TABLE TB_국어국문학과 (학번, 학생이름, 출생년도, 교수이름)
AS SELECT STUDENT_NO, STUDENT_NAME, '19'||SUBSTR(STUDENT_SSN,1,2), PROFESSOR_NAME
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_PROFESSOR ON(COACH_PROFESSOR_NO = PROFESSOR_NO)
WHERE DEPARTMENT_NAME = '국어국문학과';

DROP TABLE TB_국어국문학과;

SELECT * FROM TB_국어국문학과;

--4)
SELECT * FROM TB_DEPARTMENT;

UPDATE TB_DEPARTMENT 
SET CAPACITY = ROUND(CAPACITY*1.1);

--5)
UPDATE TB_STUDENT
SET STUDENT_ADDRESS = '서울시 종로구 숭인동 181-21'
WHERE STUDENT_NO = 'A413042';

SELECT * FROM TB_STUDENT WHERE STUDENT_NO = 'A413042';

--6)
UPDATE TB_STUDENT
SET STUDENT_SSN = SUBSTR(STUDENT_SSN, 1, 6);

SELECT * FROM TB_STUDENT;

--7)
SELECT TERM_NO, STUDENT_NAME, STUDENT_NO, CLASS_NAME, POINT FROM TB_GRADE
JOIN TB_CLASS USING(CLASS_NO)
JOIN TB_STUDENT USING(STUDENT_NO)
WHERE STUDENT_NAME = '김명훈';

UPDATE TB_GRADE
SET POINT = 3.5
WHERE (STUDENT_NO, CLASS_NO) = (SELECT STUDENT_NO, CLASS_NO
                    FROM TB_GRADE
                    JOIN TB_CLASS USING(CLASS_NO)
                    JOIN TB_STUDENT USING(STUDENT_NO)
                    WHERE STUDENT_NAME = '김명훈'
                    AND CLASS_NAME = '피부생리학');
/*
SELECT * FROM TB_GRADE
WHERE STUDENT_NO = 'A331101' AND CLASS_NO = 'C3843900'
*/

ROLLBACK;


--8)
SELECT STUDENT_NO, STUDENT_NAME, POINT, ABSENCE_YN FROM TB_GRADE JOIN TB_STUDENT USING(STUDENT_NO)
ORDER BY ABSENCE_YN DESC;
SELECT * FROM TB_STUDENT;

DELETE FROM TB_GRADE
WHERE STUDENT_NO IN (SELECT STUDENT_NO 
                    FROM TB_GRADE
                    JOIN TB_STUDENT USING(STUDENT_NO)
                    WHERE ABSENCE_YN = 'Y');
                    

                    
                    





